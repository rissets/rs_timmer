
'use server';
/**
 * @fileOverview A Genkit flow to generate text based on a user's prompt.
 *
 * - generateText - A function that handles text generation.
 * - GenerateTextPromptInput - The input type for the generateText function.
 * - GenerateTextOutput - The return type for the generateText function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import type { GenerateTextPromptInput, GenerateTextOutput } from '@/lib/types';

const GenerateTextPromptInputSchema = z.object({
  userPrompt: z.string().describe('The prompt or instruction from the user for text generation.'),
});

const GenerateTextOutputSchema = z.object({
  generatedText: z.string().describe('The text content generated by the AI.'),
});

export async function generateText(input: GenerateTextPromptInput): Promise<GenerateTextOutput> {
  return generateTextFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTextPrompt',
  input: {schema: GenerateTextPromptInputSchema},
  output: {schema: GenerateTextOutputSchema},
  prompt: `You are a helpful AI assistant. Generate text based on the following user prompt.
Be creative, informative, and concise as appropriate for the request.

User Prompt:
{{{userPrompt}}}
`,
});

const generateTextFlow = ai.defineFlow(
  {
    name: 'generateTextFlow',
    inputSchema: GenerateTextPromptInputSchema,
    outputSchema: GenerateTextOutputSchema,
  },
  async input => {
    try {
      const {output} = await prompt(input);
      if (!output) {
        throw new Error("The AI returned an empty response for text generation.");
      }
      return output;
    } catch (e: any) {
      console.error("Error in generateTextFlow:", e);
      if (e.message && (e.message.includes('SERVICE_DISABLED') || e.message.includes('API has not been used') || e.message.includes('forbidden'))) {
        throw new Error(
          'The AI service for text generation is currently unavailable or not enabled for your project. Please check your Google Cloud project settings or try again later.'
        );
      }
      throw new Error(e.message || "Could not generate text from AI. Please try again.");
    }
  }
);
